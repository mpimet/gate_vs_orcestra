name: check_cids

on:
  push:
  pull_request:

jobs:
  test-cids:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
        
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
      
    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/uv
          .venv
        key: ${{ runner.os }}-uv-${{ matrix.python-version }}-${{ hashFiles('**/pyproject.toml', '**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-${{ matrix.python-version }}-
          
    - name: Create virtual environment
      run: uv venv
      
    - name: Install dependencies
      run: uv sync --frozen
      
    - name: install IPFS
      run: |
        wget -q https://dist.ipfs.tech/kubo/${IPFS_VERSION}/kubo_${IPFS_VERSION}_linux-amd64.tar.gz
        tar -xvzf kubo_${IPFS_VERSION}_linux-amd64.tar.gz
        pushd kubo
        sudo bash install.sh
        popd
        ipfs --version
      env:
        IPFS_VERSION: v0.32.1
    - name: init IPFS
      run: |
        ipfs init --profile server,announce-off
    - name: configure known IPFS peers
      run: |
        uv run wget -q https://raw.githubusercontent.com/orcestra-campaign/ipfs_tools/refs/heads/main/scripts/add_peers.py -O - | uv run python - -f https://raw.githubusercontent.com/orcestra-campaign/ipfs_tools/refs/heads/main/known_peers.yaml
    - name: run IPFS in background
      run: |
        ipfs daemon 2>ipfs.log | grep -i -o -m1 'Daemon is ready' & tail -F --pid=$! ipfs.log
    - name: Run CID validation tests
      run: |
        uv run pytest tests/test_cids.py